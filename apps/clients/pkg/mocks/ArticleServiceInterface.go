// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/owjoel/client-factpack/apps/clients/pkg/api/model"
	mock "github.com/stretchr/testify/mock"
)

// ArticleServiceInterface is an autogenerated mock type for the ArticleServiceInterface type
type ArticleServiceInterface struct {
	mock.Mock
}

// GetAllArticles provides a mock function with given fields: ctx, query
func (_m *ArticleServiceInterface) GetAllArticles(ctx context.Context, query *model.GetArticlesReq) ([]model.Article, error) {
	ret := _m.Called(ctx, query)

	if len(ret) == 0 {
		panic("no return value specified for GetAllArticles")
	}

	var r0 []model.Article
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.GetArticlesReq) ([]model.Article, error)); ok {
		return rf(ctx, query)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *model.GetArticlesReq) []model.Article); ok {
		r0 = rf(ctx, query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Article)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *model.GetArticlesReq) error); ok {
		r1 = rf(ctx, query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewArticleServiceInterface creates a new instance of ArticleServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewArticleServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ArticleServiceInterface {
	mock := &ArticleServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
